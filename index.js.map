{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';  \n\nconst API_KEY = '11539560-6ff438bd7cc613d70e4d35abc';  \nconst BASE_URL = 'https://pixabay.com/api/';  \nlet currentPage = 1;  // Текущая страница для пагинации  \nlet currentQuery = '';  // Текущий поисковый запрос\n\n\n// Функция для получения изображений с API  \nexport async function fetchImages(query) {  \n  const params = {  \n    key: API_KEY,  \n    q: query,  \n    image_type: 'photo',  \n    orientation: 'horizontal',  \n    safesearch: true,  \n    page: currentPage, // Используем текущую страницу \n    per_page: 40,  // Получаем 40 изображений за один запрос\n  };  \n\n  const url = `${BASE_URL}?${new URLSearchParams(params)}`;  \n\n  try {  \n    const response = await axios.get(url);  \n    return response.data;  // Возвращаем данные из ответа \n  } catch (error) {  \n    console.error('Error fetching data from Pixabay API:', error);  \n    throw error;  // Обработка ошибок  \n  }  \n}  \n\n// Сброс номера страницы до 1 \nexport function resetPage() {  \n  currentPage = 1;  \n}  \n// Увеличение номера страницы на 1\nexport function incrementPage() {  \n  currentPage += 1;  \n}  \n// Установка текущего поискового запроса \nexport function setQuery(query) {  \n  currentQuery = query;  \n}  \n// Получение текущего поискового запроса \nexport function getCurrentQuery() {  \n  return currentQuery;  \n}\n\n\n\n\n// import axios from 'axios';  \n\n// const API_KEY = '11539560-6ff438bd7cc613d70e4d35abc';  \n// const BASE_URL = 'https://pixabay.com/api/';  \n\n// export function fetchImages(query) {  \n//   const params = {  \n//     key: API_KEY,  \n//     q: query,  \n//     image_type: 'photo',  \n//     orientation: 'horizontal',  \n//     safesearch: true,  \n//   };  \n\n//   const url = `${BASE_URL}?${new URLSearchParams(params)}`;  \n\n//   return axios  \n//     .get(url)  \n//     .then(response => response.data.hits)  \n//     .catch(error => {  \n//       console.error('Error fetching data from Pixabay API:', error);  \n//       throw error;  \n//     });  \n// }\n\n","import SimpleLightbox from 'simplelightbox';  \nimport 'simplelightbox/dist/simple-lightbox.min.css';  \n\nlet lightbox;  // Переменная для инициализации lightbox\n\n// Функция для инициализации lightbox \nfunction initializeLightbox() {  \n  lightbox = new SimpleLightbox('.gallery a', {  \n    captionsData: 'alt',  \n    captionDelay: 250,  \n    captionPosition: 'bottom',  \n    overlayOpacity: 1,  \n    showCounter: false,  \n  });  \n}  \n\n// Функция для отображения галереи изображений  \nexport function renderGallery(images) {  \n  const gallery = document.querySelector('#gallery');  \n  const markup = images.map(createGalleryItem).join('');  \n  gallery.insertAdjacentHTML('beforeend', markup);  // Добавляем новые элементы в галерею \n\n  if (!lightbox) {  \n    initializeLightbox();  // Инициализация lightbox, если он еще не инициализирован\n  } else {  \n    lightbox.refresh();  // Обновление lightbox при добавлении новых изображений\n  }  \n}  \n\n// Функция для создания элемента галереи \nfunction createGalleryItem({  \n  largeImageURL,  \n  webformatURL,  \n  tags,  \n  likes,  \n  views,  \n  comments,  \n  downloads,  \n}) {  \n  return `  \n    <a href=\"${largeImageURL}\" class=\"gallery-item\">  \n      <img src=\"${webformatURL}\" alt=\"${tags}\" />  \n      <div class=\"image-info\">  \n        <p><strong>Likes</strong> ${likes}</p>  \n        <p><strong>Views</strong> ${views}</p>  \n        <p><strong>Comments</strong> ${comments}</p>  \n        <p><strong>Downloads</strong> ${downloads}</p>  \n      </div>  \n    </a>`;  \n}\n\n\n\n// import SimpleLightbox from 'simplelightbox';  \n// import 'simplelightbox/dist/simple-lightbox.min.css';  \n\n// let lightbox;  \n\n// function initializeLightbox() {  \n//   lightbox = new SimpleLightbox('.gallery a', {  \n//     captionsData: 'alt',  \n//     captionDelay: 250,  \n//     captionPosition: 'bottom',  \n//     overlayOpacity: 1,  \n//     showCounter: false,  \n//   });  \n// }  \n\n// export function renderGallery(images) {  \n//   const gallery = document.querySelector('#gallery');  \n//   gallery.innerHTML = '';  \n\n//   const markup = images.map(createGalleryItem).join('');  \n//   gallery.innerHTML = markup;  \n\n//   if (!lightbox) {  \n//     initializeLightbox();  \n//   } else {  \n//     lightbox.refresh(); \n//   }  \n// }  \n\n// function createGalleryItem({  \n//   largeImageURL,  \n//   webformatURL,  \n//   tags,  \n//   likes,  \n//   views,  \n//   comments,  \n//   downloads,  \n// }) {  \n//   return `  \n//     <a href=\"${largeImageURL}\" class=\"gallery-item\">  \n//       <img src=\"${webformatURL}\" alt=\"${tags}\" />  \n//       <div class=\"image-info\">  \n//         <p><strong>Likes</strong> ${likes}</p>  \n//         <p><strong>Views</strong> ${views}</p>  \n//         <p><strong>Comments</strong> ${comments}</p>  \n//         <p><strong>Downloads</strong> ${downloads}</p>  \n//       </div>  \n//     </a>`;  \n// }","import { fetchImages, resetPage, incrementPage, setQuery, getCurrentQuery } from './js/pixabay-api.js';  \nimport { renderGallery } from './js/render-functions.js';  \nimport iziToast from 'izitoast';  \nimport 'izitoast/dist/css/iziToast.min.css';  \n\nconst refs = {  \n  form: document.querySelector('#search-form'),  \n  input: document.querySelector('#search-input'),  \n  loader: document.querySelector('#loader'), // Индикатор загрузки  \n  gallery: document.querySelector('#gallery'),  \n  loadMoreButton: document.querySelector('.load-more-button'), // Кнопка \"Load more\"  \n};  \n\n// Обработчик события отправки формы  \nrefs.form.addEventListener('submit', handleFormSubmit);  \nrefs.loadMoreButton.addEventListener('click', handleLoadMore); // Обработчик события нажатия на кнопку \"Load more\"  \n\n// Функция обработки отправки формы  \nasync function handleFormSubmit(event) {  \n  event.preventDefault();  \n  const query = refs.input.value.trim();  \n\n  if (!query) {  \n    showError('Please enter a search term!'); // Сообщение об ошибке, если запрос пустой  \n    clearGallery(); // Очистка галереи при пустом запросе \n    return;  \n  }  \n\n  resetPage(); // Сброс номера страницы  \n  setQuery(query); // Установка текущего запроса  \n  clearGallery(); // Очистка галереи  \n\n  showLoader(); // Показать загрузчик перед началом загрузки изображений  \n\n  try {  \n    const data = await fetchImages(query); // Получение изображений  \n    handleImageFetchResponse(data); // Обработка ответа  \n  } catch (error) {  \n    showError('Something went wrong! Please try again later.'); // Сообщение об ошибке  \n  } finally {  \n    hideLoader(); // Скрыть загрузчик после завершения загрузки  \n  }  \n\n  refs.input.value = ''; // Очистка поля ввода  \n}  \n\n// Функция обработки нажатия на кнопку \"Load more\"  \nasync function handleLoadMore() {  \n  const query = getCurrentQuery(); // Получение текущего запроса  \n  incrementPage(); // Увеличение номера страницы  \n\n  showLoader(); // Показать загрузчик перед началом загрузки дополнительных изображений  \n\n  try {  \n    const data = await fetchImages(query); // Получение дополнительных изображений  \n    handleImageFetchResponse(data); // Обработка ответа  \n  } catch (error) {  \n    showError('Something went wrong! Please try again later.'); // Сообщение об ошибке  \n  } finally {  \n    hideLoader(); // Скрыть загрузчик после завершения загрузки  \n  }  \n}  \n\n// Функция обработки ответа с изображениями  \nfunction handleImageFetchResponse(data) {  \n  const { hits, totalHits } = data; // Извлечение изображений и общего количества  \n\n  if (hits.length === 0) {  \n    // Если нет изображений  \n    showInfo('Sorry, there are no images matching your search query. Please try again!'); // Сообщение, если нет изображений  \n    refs.loadMoreButton.classList.add('hidden'); // Скрытие кнопки \"Load more\"  \n    return; // Выход из функции, чтобы не показывать другие сообщения  \n  }  \n\n  renderGallery(hits); // Отображение изображений  \n  refs.loadMoreButton.classList.remove('hidden'); // Показ кнопки \"Load more\"  \n\n  // Проверка, достигнут ли конец коллекции изображений  \n  if (hits.length < 40 || totalHits <= refs.gallery.children.length) {  \n    refs.loadMoreButton.classList.add('hidden'); // Скрытие кнопки \"Load more\"  \n    showInfo(\"We're sorry, but you've reached the end of search results.\"); // Сообщение о конце коллекции  \n  }  \n\n  scrollToNewItems(); // Прокрутка к новым элементам  \n}  \n\n// Функция для отображения загрузчика  \nfunction showLoader() {  \n  refs.loader.classList.remove('hidden'); // Убираем класс 'hidden', чтобы показать загрузчик  \n}  \n\n// Функция для скрытия загрузчика  \nfunction hideLoader() {  \n  refs.loader.classList.add('hidden'); // Добавляем класс 'hidden', чтобы скрыть загрузчик  \n}  \n\n// Функция для отображения сообщения об ошибке  \nfunction showError(message) {  \n  iziToast.error({  \n    title: 'Error',  \n    message,  \n    position: 'topRight',  \n    timeout: 2000,  \n  });  \n}  \n\n// Функция для отображения информационного сообщения  \nfunction showInfo(message) {  \n  iziToast.info({  \n    title: '',  \n    message,  \n    position: 'topRight',  \n    timeout: 3000,  \n  });  \n}  \n\n// Функция для очистки галереи  \nfunction clearGallery() {  \n  refs.gallery.innerHTML = '';  \n}  \n\n// Функция для плавной прокрутки к новым элементам  \nfunction scrollToNewItems() {  \n  const { height: cardHeight } = refs.gallery.firstElementChild.getBoundingClientRect(); // Получение высоты карточки  \n  window.scrollBy({  \n    top: cardHeight * 2, // Прокрутка на две высоты карточки  \n    behavior: 'smooth',  \n  });  \n}\n\n\n\n// import { fetchImages } from './js/pixabay-api.js';\n// import { renderGallery } from './js/render-functions.js';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// const refs = {\n//   form: document.querySelector('#search-form'),\n//   input: document.querySelector('#search-input'),\n//   loader: document.querySelector('#loader'),\n//   gallery: document.querySelector('#gallery'),\n// };\n\n// function showLoader() {\n//   refs.loader.classList.remove('hidden');\n// }\n\n// function hideLoader() {\n//   refs.loader.classList.add('hidden');\n// }\n\n// function showError(message) {\n//   iziToast.error({\n//     title: 'Error',\n//     message,\n//     position: 'topRight',\n//     timeout: 2000,\n//   });\n// }\n\n// function showInfo(message) {\n//   iziToast.info({\n//     title: '',\n//     message,\n//     position: 'topRight',\n//     timeout: 3000,\n//   });\n// }\n\n// function clearGallery() {  \n//   refs.gallery.innerHTML = '';\n// }  \n\n// function handleFormSubmit(event) {\n//   event.preventDefault();\n//   const query = refs.input.value.trim();\n\n//   if (!query) {\n//     showError('Please enter a search term!');\n//     clearGallery(); \n//     return;\n//   }\n\n// clearGallery(); \n\n//   fetchImagesWithLoader(query);\n//   refs.input.value = '';\n// }\n\n// function fetchImagesWithLoader(query) {\n//   showLoader();\n\n//   fetchImages(query)\n//     .then(images => {\n//       hideLoader();\n//       handleImageFetchResponse(images);\n//     })\n//     .catch(error => {\n//       hideLoader();\n//       showError('Something went wrong! Please try again later.');\n//       console.error('Error fetching images:', error);\n//     });\n// }\n\n// function handleImageFetchResponse(images) {\n//   if (images.length === 0) {\n//     showInfo('Sorry, there are no images matching your search query. Please try again!');\n//   } else {\n//     renderGallery(images);\n//   }\n// }\n\n// refs.form.addEventListener('submit', handleFormSubmit);\n\n\n"],"names":["API_KEY","BASE_URL","currentPage","currentQuery","fetchImages","query","params","url","axios","error","resetPage","incrementPage","setQuery","getCurrentQuery","lightbox","initializeLightbox","SimpleLightbox","renderGallery","images","gallery","markup","createGalleryItem","largeImageURL","webformatURL","tags","likes","views","comments","downloads","refs","handleFormSubmit","handleLoadMore","event","showError","clearGallery","showLoader","data","handleImageFetchResponse","hideLoader","hits","totalHits","showInfo","scrollToNewItems","message","iziToast","cardHeight"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BACjB,IAAIC,EAAc,EACdC,EAAe,GAIZ,eAAeC,EAAYC,EAAO,CACvC,MAAMC,EAAS,CACb,IAAKN,EACL,EAAGK,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMH,EACN,SAAU,EACd,EAEQK,EAAM,GAAGN,CAAQ,IAAI,IAAI,gBAAgBK,CAAM,CAAC,GAEtD,GAAI,CAEF,OADiB,MAAME,EAAM,IAAID,CAAG,GACpB,IACjB,OAAQE,EAAO,CACd,cAAQ,MAAM,wCAAyCA,CAAK,EACtDA,CACP,CACH,CAGO,SAASC,GAAY,CAC1BR,EAAc,CAChB,CAEO,SAASS,GAAgB,CAC9BT,GAAe,CACjB,CAEO,SAASU,EAASP,EAAO,CAC9BF,EAAeE,CACjB,CAEO,SAASQ,GAAkB,CAChC,OAAOV,CACT,CC3CA,IAAIW,EAGJ,SAASC,GAAqB,CAC5BD,EAAW,IAAIE,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,IACd,gBAAiB,SACjB,eAAgB,EAChB,YAAa,EACjB,CAAG,CACH,CAGO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAASF,EAAO,IAAIG,CAAiB,EAAE,KAAK,EAAE,EACpDF,EAAQ,mBAAmB,YAAaC,CAAM,EAEzCN,EAGHA,EAAS,QAAO,EAFhBC,GAIJ,CAGA,SAASM,EAAkB,CACzB,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACF,EAAG,CACD,MAAO;AAAA,eACMN,CAAa;AAAA,kBACVC,CAAY,UAAUC,CAAI;AAAA;AAAA,oCAERC,CAAK;AAAA,oCACLC,CAAK;AAAA,uCACFC,CAAQ;AAAA,wCACPC,CAAS;AAAA;AAAA,SAGjD,CC5CA,MAAMC,EAAO,CACX,KAAM,SAAS,cAAc,cAAc,EAC3C,MAAO,SAAS,cAAc,eAAe,EAC7C,OAAQ,SAAS,cAAc,SAAS,EACxC,QAAS,SAAS,cAAc,UAAU,EAC1C,eAAgB,SAAS,cAAc,mBAAmB,CAC5D,EAGAA,EAAK,KAAK,iBAAiB,SAAUC,CAAgB,EACrDD,EAAK,eAAe,iBAAiB,QAASE,CAAc,EAG5D,eAAeD,EAAiBE,EAAO,CACrCA,EAAM,eAAc,EACpB,MAAM3B,EAAQwB,EAAK,MAAM,MAAM,KAAI,EAEnC,GAAI,CAACxB,EAAO,CACV4B,EAAU,6BAA6B,EACvCC,IACA,MACD,CAEDxB,IACAE,EAASP,CAAK,EACd6B,IAEAC,IAEA,GAAI,CACF,MAAMC,EAAO,MAAMhC,EAAYC,CAAK,EACpCgC,EAAyBD,CAAI,CAC9B,MAAe,CACdH,EAAU,+CAA+C,CAC7D,QAAY,CACRK,GACD,CAEDT,EAAK,MAAM,MAAQ,EACrB,CAGA,eAAeE,GAAiB,CAC9B,MAAM1B,EAAQQ,IACdF,IAEAwB,IAEA,GAAI,CACF,MAAMC,EAAO,MAAMhC,EAAYC,CAAK,EACpCgC,EAAyBD,CAAI,CAC9B,MAAe,CACdH,EAAU,+CAA+C,CAC7D,QAAY,CACRK,GACD,CACH,CAGA,SAASD,EAAyBD,EAAM,CACtC,KAAM,CAAE,KAAAG,EAAM,UAAAC,CAAW,EAAGJ,EAE5B,GAAIG,EAAK,SAAW,EAAG,CAErBE,EAAS,0EAA0E,EACnFZ,EAAK,eAAe,UAAU,IAAI,QAAQ,EAC1C,MACD,CAEDZ,EAAcsB,CAAI,EAClBV,EAAK,eAAe,UAAU,OAAO,QAAQ,GAGzCU,EAAK,OAAS,IAAMC,GAAaX,EAAK,QAAQ,SAAS,UACzDA,EAAK,eAAe,UAAU,IAAI,QAAQ,EAC1CY,EAAS,4DAA4D,GAGvEC,GACF,CAGA,SAASP,GAAa,CACpBN,EAAK,OAAO,UAAU,OAAO,QAAQ,CACvC,CAGA,SAASS,GAAa,CACpBT,EAAK,OAAO,UAAU,IAAI,QAAQ,CACpC,CAGA,SAASI,EAAUU,EAAS,CAC1BC,EAAS,MAAM,CACb,MAAO,QACP,QAAAD,EACA,SAAU,WACV,QAAS,GACb,CAAG,CACH,CAGA,SAASF,EAASE,EAAS,CACzBC,EAAS,KAAK,CACZ,MAAO,GACP,QAAAD,EACA,SAAU,WACV,QAAS,GACb,CAAG,CACH,CAGA,SAAST,GAAe,CACtBL,EAAK,QAAQ,UAAY,EAC3B,CAGA,SAASa,GAAmB,CAC1B,KAAM,CAAE,OAAQG,CAAY,EAAGhB,EAAK,QAAQ,kBAAkB,wBAC9D,OAAO,SAAS,CACd,IAAKgB,EAAa,EAClB,SAAU,QACd,CAAG,CACH"}